{
  "stats": {
    "suites": 8,
    "tests": 26,
    "passes": 26,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 26,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-04-06T20:50:51.436Z",
    "end": "2025-04-06T21:15:11.572Z",
    "duration": 1460136
  },
  "results": [
    {
      "uuid": "3430c3f3-8be3-4bb3-80db-55209f5ebae5",
      "title": "",
      "fullFile": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-all-fields-filled.feature",
      "file": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-all-fields-filled.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
          "title": "Complete Automobile Insurance Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User completes the automobile form with all optional and required fields filled (example #1)",
              "fullTitle": "Complete Automobile Insurance Flow User completes the automobile form with all optional and required fields filled (example #1)",
              "timedOut": null,
              "duration": 20473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "92f498dc-5896-4e04-98f9-6f82a2ffb0e4",
              "parentUUID": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile form with all optional and required fields filled (example #2)",
              "fullTitle": "Complete Automobile Insurance Flow User completes the automobile form with all optional and required fields filled (example #2)",
              "timedOut": null,
              "duration": 19117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1931ac08-9eee-47ad-86e7-253948ac76bf",
              "parentUUID": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile form with all optional and required fields filled (example #3)",
              "fullTitle": "Complete Automobile Insurance Flow User completes the automobile form with all optional and required fields filled (example #3)",
              "timedOut": null,
              "duration": 19284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8d073c0c-9286-4dde-882c-c3fd05bb544b",
              "parentUUID": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile form with all optional and required fields filled (example #4)",
              "fullTitle": "Complete Automobile Insurance Flow User completes the automobile form with all optional and required fields filled (example #4)",
              "timedOut": null,
              "duration": 20634,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cbcba969-26a3-4e60-8f13-3efab9168b6f",
              "parentUUID": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92f498dc-5896-4e04-98f9-6f82a2ffb0e4",
            "1931ac08-9eee-47ad-86e7-253948ac76bf",
            "8d073c0c-9286-4dde-882c-c3fd05bb544b",
            "cbcba969-26a3-4e60-8f13-3efab9168b6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 79508,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7238dd8f-c470-4d7b-a3d1-de628f80beec",
      "title": "",
      "fullFile": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-required-fields.feature",
      "file": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-required-fields.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
          "title": "Automobile Insurance Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User completes the automobile insurance form with Platinum price option (example #1)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Platinum price option (example #1)",
              "timedOut": null,
              "duration": 18245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ed6db4c7-cebe-4e98-b00b-1358b0c54d17",
              "parentUUID": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Gold price option (example #2)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Gold price option (example #2)",
              "timedOut": null,
              "duration": 15306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "db3c630b-e2b6-4b67-958a-74ef9af108ee",
              "parentUUID": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Silver price option (example #3)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Silver price option (example #3)",
              "timedOut": null,
              "duration": 15419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a7764481-84a4-4440-9c0d-df983b32150d",
              "parentUUID": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Ultimate price option (example #4)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Ultimate price option (example #4)",
              "timedOut": null,
              "duration": 15019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "89fcd1e1-d73f-4c08-8bc7-97dc4edf1b26",
              "parentUUID": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed6db4c7-cebe-4e98-b00b-1358b0c54d17",
            "db3c630b-e2b6-4b67-958a-74ef9af108ee",
            "a7764481-84a4-4440-9c0d-df983b32150d",
            "89fcd1e1-d73f-4c08-8bc7-97dc4edf1b26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 63989,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a4afac00-a71a-4699-a7ad-33eaca274f84",
      "title": "",
      "fullFile": "cypress\\e2e\\automobile\\failure\\automobile-missing-form-validation.feature",
      "file": "cypress\\e2e\\automobile\\failure\\automobile-missing-form-validation.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1fa9fec3-f07a-4759-a855-e839ac0f8e10",
          "title": "Automobile Insurance Application - Form Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User attempts to select a plan without completing previous forms",
              "fullTitle": "Automobile Insurance Application - Form Validation User attempts to select a plan without completing previous forms",
              "timedOut": null,
              "duration": 5235,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "72fc4bc5-2fb0-4976-9e22-3e00c2e83f61",
              "parentUUID": "1fa9fec3-f07a-4759-a855-e839ac0f8e10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72fc4bc5-2fb0-4976-9e22-3e00c2e83f61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c74e131c-7517-4c24-ad44-97bc27a42951",
      "title": "",
      "fullFile": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-all-fields-filled.feature",
      "file": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-all-fields-filled.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f983fd0d-519f-4877-badb-50612da851ce",
          "title": "Complete Automobile Insurance Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User completes all the automobile insurance forms with Platinum price option (example #1)",
              "fullTitle": "Complete Automobile Insurance Flow User completes all the automobile insurance forms with Platinum price option (example #1)",
              "timedOut": null,
              "duration": 20721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8e532b18-2919-44f5-a0cb-611538201bb5",
              "parentUUID": "f983fd0d-519f-4877-badb-50612da851ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes all the automobile insurance forms with Gold price option (example #2)",
              "fullTitle": "Complete Automobile Insurance Flow User completes all the automobile insurance forms with Gold price option (example #2)",
              "timedOut": null,
              "duration": 22251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "31316640-fb99-44be-bcf0-7b942083fdae",
              "parentUUID": "f983fd0d-519f-4877-badb-50612da851ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes all the automobile insurance forms with Silver price option (example #3)",
              "fullTitle": "Complete Automobile Insurance Flow User completes all the automobile insurance forms with Silver price option (example #3)",
              "timedOut": null,
              "duration": 17435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dffae412-8bb4-4a0e-b855-e2950fc0aff4",
              "parentUUID": "f983fd0d-519f-4877-badb-50612da851ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes all the automobile insurance forms with Ultimate price option (example #4)",
              "fullTitle": "Complete Automobile Insurance Flow User completes all the automobile insurance forms with Ultimate price option (example #4)",
              "timedOut": null,
              "duration": 18047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "40351614-e8fa-4510-85ac-2ebdbae19e57",
              "parentUUID": "f983fd0d-519f-4877-badb-50612da851ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e532b18-2919-44f5-a0cb-611538201bb5",
            "31316640-fb99-44be-bcf0-7b942083fdae",
            "dffae412-8bb4-4a0e-b855-e2950fc0aff4",
            "40351614-e8fa-4510-85ac-2ebdbae19e57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 78454,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "000aa22e-7b99-4dd8-8926-3c993b4a1b85",
      "title": "",
      "fullFile": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-required-fields.feature",
      "file": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-required-fields.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4260598f-a346-4bf1-a58b-68e5ecfc9dc7",
          "title": "Automobile Insurance Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User completes the automobile insurance form with Platinum price option (example #1)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Platinum price option (example #1)",
              "timedOut": null,
              "duration": 18487,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f7ac5403-50a1-4690-b02a-449b38e015b2",
              "parentUUID": "4260598f-a346-4bf1-a58b-68e5ecfc9dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Gold price option (example #2)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Gold price option (example #2)",
              "timedOut": null,
              "duration": 15709,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "04b5f3aa-d3fa-4e3c-9812-452c12e7baed",
              "parentUUID": "4260598f-a346-4bf1-a58b-68e5ecfc9dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Silver price option (example #3)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Silver price option (example #3)",
              "timedOut": null,
              "duration": 15650,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f330e344-51a5-4550-be61-619954aba2f5",
              "parentUUID": "4260598f-a346-4bf1-a58b-68e5ecfc9dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Ultimate price option (example #4)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Ultimate price option (example #4)",
              "timedOut": null,
              "duration": 15088,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "121f4a05-bd43-42bc-8fa4-eede12d231a7",
              "parentUUID": "4260598f-a346-4bf1-a58b-68e5ecfc9dc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7ac5403-50a1-4690-b02a-449b38e015b2",
            "04b5f3aa-d3fa-4e3c-9812-452c12e7baed",
            "f330e344-51a5-4550-be61-619954aba2f5",
            "121f4a05-bd43-42bc-8fa4-eede12d231a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 64934,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3430c3f3-8be3-4bb3-80db-55209f5ebae5",
      "title": "",
      "fullFile": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-all-fields-filled.feature",
      "file": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-all-fields-filled.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
          "title": "Complete Automobile Insurance Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User completes the automobile form with all optional and required fields filled (example #1)",
              "fullTitle": "Complete Automobile Insurance Flow User completes the automobile form with all optional and required fields filled (example #1)",
              "timedOut": null,
              "duration": 20473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "92f498dc-5896-4e04-98f9-6f82a2ffb0e4",
              "parentUUID": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile form with all optional and required fields filled (example #2)",
              "fullTitle": "Complete Automobile Insurance Flow User completes the automobile form with all optional and required fields filled (example #2)",
              "timedOut": null,
              "duration": 19117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1931ac08-9eee-47ad-86e7-253948ac76bf",
              "parentUUID": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile form with all optional and required fields filled (example #3)",
              "fullTitle": "Complete Automobile Insurance Flow User completes the automobile form with all optional and required fields filled (example #3)",
              "timedOut": null,
              "duration": 19284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8d073c0c-9286-4dde-882c-c3fd05bb544b",
              "parentUUID": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile form with all optional and required fields filled (example #4)",
              "fullTitle": "Complete Automobile Insurance Flow User completes the automobile form with all optional and required fields filled (example #4)",
              "timedOut": null,
              "duration": 20634,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cbcba969-26a3-4e60-8f13-3efab9168b6f",
              "parentUUID": "75f4a19c-a21d-4669-ab6e-5bef958b24be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92f498dc-5896-4e04-98f9-6f82a2ffb0e4",
            "1931ac08-9eee-47ad-86e7-253948ac76bf",
            "8d073c0c-9286-4dde-882c-c3fd05bb544b",
            "cbcba969-26a3-4e60-8f13-3efab9168b6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 79508,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7238dd8f-c470-4d7b-a3d1-de628f80beec",
      "title": "",
      "fullFile": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-required-fields.feature",
      "file": "cypress\\e2e\\automobile\\success\\complete-automobile-form-with-required-fields.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
          "title": "Automobile Insurance Application",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User completes the automobile insurance form with Platinum price option (example #1)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Platinum price option (example #1)",
              "timedOut": null,
              "duration": 18245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ed6db4c7-cebe-4e98-b00b-1358b0c54d17",
              "parentUUID": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Gold price option (example #2)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Gold price option (example #2)",
              "timedOut": null,
              "duration": 15306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "db3c630b-e2b6-4b67-958a-74ef9af108ee",
              "parentUUID": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Silver price option (example #3)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Silver price option (example #3)",
              "timedOut": null,
              "duration": 15419,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a7764481-84a4-4440-9c0d-df983b32150d",
              "parentUUID": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User completes the automobile insurance form with Ultimate price option (example #4)",
              "fullTitle": "Automobile Insurance Application User completes the automobile insurance form with Ultimate price option (example #4)",
              "timedOut": null,
              "duration": 15019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "89fcd1e1-d73f-4c08-8bc7-97dc4edf1b26",
              "parentUUID": "2380c33a-4ad8-4ed3-9fb5-f9ae6e8abecf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed6db4c7-cebe-4e98-b00b-1358b0c54d17",
            "db3c630b-e2b6-4b67-958a-74ef9af108ee",
            "a7764481-84a4-4440-9c0d-df983b32150d",
            "89fcd1e1-d73f-4c08-8bc7-97dc4edf1b26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 63989,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f07322ad-70ff-43c7-88a6-9216d76055d6",
      "title": "",
      "fullFile": "cypress\\e2e\\automobile\\failure\\automobile-missing-form-validation.feature",
      "file": "cypress\\e2e\\automobile\\failure\\automobile-missing-form-validation.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b0b10fc-1189-45bc-8a2d-7b1a8fa8c552",
          "title": "Automobile Insurance Application - Form Validation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User attempts to select a plan without completing previous forms",
              "fullTitle": "Automobile Insurance Application - Form Validation User attempts to select a plan without completing previous forms",
              "timedOut": null,
              "duration": 4585,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1e75636e-ae9b-46bf-a80c-0351a5516513",
              "parentUUID": "4b0b10fc-1189-45bc-8a2d-7b1a8fa8c552",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e75636e-ae9b-46bf-a80c-0351a5516513"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4585,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}